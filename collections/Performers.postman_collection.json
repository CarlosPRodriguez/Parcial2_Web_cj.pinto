{
	"info": {
		"_postman_id": "a43fc235-44b1-479f-ae30-606e91e0bc07",
		"name": "Performers",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23052692"
	},
	"item": [
		{
			"name": "Add a performer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var datos = pm.response.json()\r",
							"pm.globals.set(\"performer_id\", datos.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Performer Carlos\",\r\n    \"imagen\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\r\n    \"descripcion\": \"Esta sera una descripcion para hacer prueba postam para el parcial 2\"   \r\n }\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/performers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"performers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Not add Performer 100 Caracteres",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"La descripciÃ³n debe ser menor  a 100 caracteres.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Performer Carlos\",\r\n    \"imagen\": \"https://www.si.edu/sites/default/files/newsdesk/fact_sheets/nhb2015-02891.jpg\",\r\n    \"descripcion\": \"Esta sera una descripcion para hacer prueba postam para el parcial 2 debe falla ya que es mas de 100 caracteres sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\"   \r\n }\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/performers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"performers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all performers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of performers > ' + 0, function () {\r",
							"    var data = pm.response.json()\r",
							"    pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/performers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"performers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get one performer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/performers/{{performer_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"performers",
						"{{performer_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an  invalid performer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.message).to.eql(\"The performer with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/performers/00000000-0000-0000-0000-000000000000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"performers",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		}
	]
}